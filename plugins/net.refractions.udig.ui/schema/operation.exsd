<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="net.refractions.udig.ui">
<annotation>
      <appInfo>
         <meta.schema plugin="net.refractions.udig.ui" id="Operation" name="Operation"/>
      </appInfo>
      <documentation>
         Contribute operations to the user interface; will show up in menu bars, toolbars and context menus as appropriate.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="category" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="operation" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="category">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" translatable="true"/>
         </appInfo>
         <documentation>
            A way of organizing operations in menus. The operation menus will be organized into submenus for each category of operations.

For example: &quot;net.refractions.udig.ui.edit&quot;
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="menuPath" type="string">
            <annotation>
               <documentation>
                  Location in the menu bar for operation category.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="context" type="string">
            <annotation>
               <documentation>
                  Optional context used to contribute operation group into the appropriate context menus.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="operation">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" icon="icon" translatable="true"/>
         </appInfo>
         <documentation>
            An definition for an operation on a data element.  Operations can be performed on objects including but not limited to Layers, FeatureSources/Stores, IGeoResources, etc...  
&lt;p&gt;The type object that the operation operates on is declared in this extension point and when the selection includes objects that the operation can be performed on, a menu item will be enabled in the Operations menu and available in the context menu in the view where the selection occurred&lt;/p&gt;
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="enablement"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The operation class that will perform an operation on the targetClass.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="net.refractions.udig.ui.operations.IOp"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="targetClass" type="string" use="required">
            <annotation>
               <documentation>
                  The class of objects that the declared operation can operate on.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="java.lang.Object"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="categoryId" type="string">
            <annotation>
               <documentation>
                  The category that this operation is part of.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="menuPath" type="string">
            <annotation>
               <documentation>
                  If the menuPath attribute is used to define a location in the menubar for the operation to appear.
For example if the menuPath=layer/additions then the operation will appear the layer menu.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="enablesFor" type="string" use="default" value="1">
            <annotation>
               <documentation>
                  &lt;p&gt;a value indicating the selection count which must be met to enable the action. If specified and the condition is not met, the action is disabled. If omitted, the value is assumed to be 1. The following attribute formats are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+  - 1 or more items selected&lt;/li&gt;
&lt;li&gt;multiple, 2+  - 2 or more items selected&lt;/li&gt;
&lt;li&gt;n  - a precise number of items selected.a precise number of items selected.  For example: enablesFor=&quot; 4&quot; enables the action only when 4 items are selected&lt;/li&gt;
&lt;/ul&gt;
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="and">
      <complexType>
         <sequence>
            <element ref="adaptsTo" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="property" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="and" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="or" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="not" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="or">
      <complexType>
         <sequence>
            <element ref="adaptsTo" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="property" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="and" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="or" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="not" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="not">
      <complexType>
         <choice>
            <element ref="adaptsTo"/>
            <element ref="property"/>
            <element ref="and"/>
            <element ref="or"/>
            <element ref="not"/>
         </choice>
      </complexType>
   </element>

   <element name="enablement">
      <complexType>
         <choice>
            <element ref="adaptsTo"/>
            <element ref="and"/>
            <element ref="or"/>
            <element ref="not"/>
            <element ref="property"/>
         </choice>
      </complexType>
   </element>

   <element name="adaptsTo">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="target"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="target" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="property">
      <annotation>
         <documentation>
            See objectProperty.exsd

Declares the propertyName that a condition element operates on.

TODO: Need to place a link here to a spot where valid propertyNames are declared.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  The id of the property extension to use.
See net.refractions.udig.ui.objectProperty

It is the id of the property element which is a grandchild of the ObjectProperty element.
               </documentation>
               <appInfo>
                  <meta.attribute deprecated="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="target" type="string">
            <annotation>
               <documentation>
                  The value that &quot;property&quot; is compared to.
               </documentation>
               <appInfo>
                  <meta.attribute deprecated="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="propertyId" type="string" use="required">
            <annotation>
               <documentation>
                  The id of the property extension to use.
See net.refractions.udig.ui.objectProperty

It is the id of the property element which is a grandchild of the ObjectProperty element.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="expectedValue" type="string" use="required">
            <annotation>
               <documentation>
                  The value that the property is expected to match
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         UDIG 1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
