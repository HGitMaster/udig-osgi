# build.properties for Eclipse PDE batch build
# of udigLite product
#
# Harald Wellmann, 15 Mar 2009

############# PRODUCT/PACKAGING CONTROL #############
product=../../plugins/net.refractions.udig/udig.product
runPackager=true


udig.version = 1.2.0.RC1osgi1
#Set the name of the archive that will result from the product build.
archiveNamePrefix=udigLite-${udig.version}

# The prefix that will be used in the generated archive.
archivePrefix=udigLite

# The location underwhich all of the build output will be collected.
collectingFolder=${archivePrefix}

# The list of {os, ws, arch} configurations to build.  This 
# value is a '&' separated list of ',' separate triples.  For example, 
#     configs=win32,win32,x86 & linux,motif,x86
# By default the value is *,*,*
#configs = *, *, *
configs = linux, gtk, x86_64 & win32, win32, x86
#configs=win32, win32, x86 & \
#	linux, gtk, ppc &\
#       linux, gtk, x86 & \
#	linux, gtk, x86_64 & \
#	linux, motif, x86 & \
#	solaris, motif, sparc & \
#	solaris, gtk, sparc & \
#	aix, motif, ppc & \
#	hpux, motif, PA_RISC & \
#	macosx, carbon, ppc

#Arguments to send to the zip executable
#zipargs=

#Arguments to send to the tar executable
#tarargs=

#Control the creation of a file containing the version included in each configuration - on by default 
#generateVersionsLists=false

############## BUILD NAMING CONTROL ################
# The directory into which the build elements are fetched and where
# the build takes place.
buildDirectory=${buildRoot}

# Type of build.  Used in naming the build output.  Typically this value is
# one of I, N, M, S, ...
buildType=I

# ID of the build.  Used in naming the build output.
buildId=udigLite

# Label for the build.  Used in naming the build output
buildLabel=${buildType}.${buildId}

# Timestamp for the build.  Used in naming the build output
timestamp=007

############# BASE CONTROL #############
# Settings for the base Eclipse components and Java class libraries 
# against which you are building.
# Base location for anything the build needs to compile against.  For example,
# in most RCP app or a plug-in,  the baseLocation should be the location of a previously
# installed Eclipse against which the application or plug-in code will be compiled and the RCP delta pack.

base=${eclipse.home}
baseLocation=${base}

# hwellmann: This does not seem to be required. 
#
#Os/Ws/Arch/nl of the eclipse specified by baseLocation
#baseos=win32
#basews=win32
#basearch=x86

# hwellmann: This would be very nice to use, but appears to be broken in
# Eclipse 3.4.1.
#
#this property indicates whether you want the set of plug-ins and features to be considered during the build to be limited to the ones reachable from the features / plugins being built
#filteredDependencyCheck=true

#this property indicates whether the resolution should be done in development mode (i.e. ignore multiple bundles with singletons)
resolution.devMode=false

#pluginPath is a list of locations in which to find plugins and features.  This list is separated by the platform file separator (; or :)
#a location is one of:  
#- the location of the jar or folder that is the plugin or feature : /path/to/foo.jar or /path/to/foo
#- a directory that contains a /plugins or /features subdirectory
#- the location of a feature.xml, or for 2.1 style plugins, the plugin.xml or fragment.xml

# hwellmann: This is set by the build file invoking the Eclipse antrunner.

#pluginPath=

# hwellmann: We do not fetch Eclipse itself or sources from CVS repositories.

skipBase=true
skipMaps=true
skipFetch=true


############# JAVA COMPILER OPTIONS ##############

# Specify the output format of the compiler log when eclipse jdt is used
logExtension=.log

# Whether or not to include debug info in the output jars
javacDebugInfo=true 

# Whether or not to fail the build if there are compiler errors
javacFailOnError=true

# Enable or disable verbose mode of the compiler
javacVerbose=false

# Extra arguments for the compiler. These are specific to the java compiler being used.
compilerArg=-nowarn

# Default value for the version of the source code. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacSource in build.properties
javacSource=1.5

# Default value for the version of the byte code targeted. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacTarget in build.properties.
javacTarget=1.5

# hwellmann: This option is undocumented in Eclipse 3.4.1, but it is required 
# to suppress error messages about dependency cycles in the target platform 
# (e.g. for JAI).
allowBinaryCycles = true

